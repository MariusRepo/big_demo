BROKER SCHEMA book


CREATE COMPUTE MODULE borrow_book
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		DECLARE json_data REFERENCE TO InputRoot.JSON.Data;
		
		DECLARE query_user INTEGER;
		SET query_user = json_data.user;
		DECLARE query_book INTEGER;
		SET query_book = json_data.book;
		DECLARE query_days CHARACTER;
		SET query_days = json_data.days;
		
		
		DECLARE query CHARACTER;
		SET query = 'SELECT * FROM big.borrowed_books AS borrowed WHERE borrowed.book_id = ' || CAST(query_book AS CHARACTER);
		DECLARE result ROW;
		SET result = PASSTHRU(query);
		
		DECLARE I INTEGER;
		SET I = CARDINALITY(result.[]);
		
		IF (I = 0) THEN
			DECLARE cur_date DATE CURRENT_DATE;
			DECLARE due_date DATE;		
		
			SET due_date = cur_date + CAST(query_days AS INTERVAL DAY);
		
			INSERT INTO Database.big.borrowed_books (user_id, book_id, return_date)
        	VALUES (query_user, query_book, due_date);
		ELSE
			SET OutputRoot.JSON.Data.warning = 'BOOK NOT AVAILABLE!';	        
		END IF;
                
		RETURN TRUE;
	END;

END MODULE;
